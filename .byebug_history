exit
@products
raw_total - discount(rule)
raw_total
discount(rule)
c
exit
[A
ule
discount(rule)
raw_total
@products
return 15.3
a - b
b = a * 0.1
a = (products.size * rule[:new_price_per_item])
c
next
a-b
b = a*0.1
a*0.1
a = (products.size * rule[:new_price_per_item])
continue
(products.size * rule[:new_price_per_item])
@discount_percentage
c
n
@discount_percentage
next
@discount_percentage
(products.size * rule[:new_price_per_item])
continue
-(price_for(products) + (products.size * rule[:new_price_per_item]))
raw_total
apply_promotional_rules.to_f
continue
apply_promotional_rules.to_f
continue
apply_promotional_rules.to_f
continue
apply_promotional_rules.to_f
exit
rule
find_products_by '004'
find_products_by '001'
exit
@products.select { |product| product.product_code == '001' }.first
@products.select { |product| product.product_code == '001' }
@products.select { |product| product.id == '001' }
find_product_by('001')
@products
continue
raw_total > rule[:treshold] ? raw_total * rule[:discount] : 0
raw_total > rule[:treshold] ? raw_total * rule[:discount]
raw_total > rule[:treshold] ? raw_total*rule[:discount]
raw_total > rule[:treshold]
raw_total
rule[:treshold] > raw_total
rule
exit
@product3
@product2
@product1
